//Быстрый старт с Go: начало

Важное объявление:
Уважаемые участники интенсива «Быстрый старт с Go», обратите внимание:
1. Цель занятия: дать представление об основах Go.
2. Длительность: от 1.5 до 2х часов, запись будет в разделе Материалы урока.
3. Выдача, выполнение и оценка домашнего задания не предполагаются.
4. Если опыт программирования равен 0 - проработайте статью «Быстрый старт с Go: начало».
5. До начала рекомендуется установить компилятор Go, посетив сайт https://golang.org.

В течение 60-90 минут мы получим стартовые знания о языке Go. Научимся писать код, компилировать его и запускать в командной строке. Познакомимся с переменными. Освоим проверку условий и циклы. Напишем простейшую консольную игру. Перед началом занятия необходимо скачать и установить компилятор Gо, а также подготовить свой любимый текстовый редактор.

Цель: освоить азы языка (переменные, условия+циклы, пакеты+импорт)
Аудитория: новички в Go и программировании
Перед началом: скачать и установить Go

Введение:
- Go (часто Golang) это компилируемый язык, разработанный в 2007-2009 гг в Google
- Предназначен для создания эффективных программ для современных распределённых систем и многоядерных процессоров
- Можно рассматривать как попытку создать замену языкам C/C++
- Системa автоматического управления памятью со сборщиком мусора
- Встроенные средства параллельного программирования
- Лаконичный и простой синтаксис, основанный на C
- Строгая статическая типизация
Подробно:
https://ru.wikipedia.org/wiki/Go

План:
1. Подготовка: скачать Go https://golang.org/ командная строка
2. Редактирование исходного текста
3. Программа hello.go (пакеты, функции, функция main(), вывод в консоль)
4. Переменные, встроенные типы данных (числа, логические значения, строки)
5. Ветвления: if-else
6. Циклы: for, команды break? и continue?
7. Пакеты и импорт, чтение консоли Scanln(), случайные числа rand.Intn(N)
8. Игра "Угадай число", функция rand.Seed(time.Now().UnixNano())

Быстрый старт с Go: начало
https://docs.google.com/document/d/1GfWx31RVa-rsYRA1B8EwcYyCAfYX0c_DgBeRwEp9YbM | https://geekbrains.ru/posts/bystryj-start-s-go-pervye-shagi

Быстрый старт с Go: сканер погоды
https://geekbrains.ru/posts/bystryj-start-s-go-skaner-pogody

Телеграм-чат:
https://t.me/joinchat/EuijNlgqBbVfWZ_8w2ENZA открыт для ваших вопросов.

Статья: Go-разработчик — новая профессия в GeekBrains
https://geekbrains.ru/posts/go-razrabotchik-novaya-professiya-v-geekbrains

Онлайн курс: Go-разработчик
https://godeveloper.geekbrains.ru/

//
//Продолжение: сканер погоды/валют
//

Продолжаем с Go: пишем сканер погоды

Go — быстро набирающий популярность язык программирования, разработанный Google (2007-2009гг). На этом вебинаре мы напишем на Go простой сканер погоды:

- Начнём с HelloWorld, текстовый редактор, работа в командной строке.
- Вспомним основы языка (переменные, ветвления, пакеты, вызов функций).
- Поговорим о формате xml и структурах в Go.
- Получим ссылку для импорта данных в xml.
- Создадим нужную структуру, используя онлайн-инструмент.
- Напишем код: чтение данных с сайта, парсинг, вывод результатов.

Рекомендуется предварительно посетить вебинар "Быстрый старт с Go".

Перед началом занятия нужно скачать и установить компилятор Go, посетив сайт https://golang.org. Подготовьте также свой любимый текстовый редактор.

Источник данных: https://www.meteoservice.ru/content/export

План:
1. Проект: читаем данные о погоде в интернет и выбираем нужное
2. Получение ссылки для импорта xml
3. Создание нужной структуры - https://www.onlinetool.io/xmltogo/
4. Чтение данных при помощи GET запроса, пакет net/http
   а. Обработка ошибок запроса, возвращаемые значений функции Get()
   b. Логирование, пакет log, функция Fatal()
   c. Закрытие потока чтения, отложенное закрытие, defer
5. Чтение потока байт из результатов http запроса, пакет io/ioutil
6. Парсинг xml данных - https://tutorialedge.net/golang/parsing-xml-with-golang/
7. Вывод результатов

Подробнее:
- Формат XML
  https://ru.wikipedia.org/wiki/XML
- Получение данных о погоде в формате XML
  https://www.meteoservice.ru/content/export
- Отправка запросов по HTTP
  https://metanit.com/go/tutorial/9.5.php
- Идея парсинга данных: читаем XML и отображаем его на структуру

Ссылка на статью "Быстрый старт с Go: сканер погоды"
https://docs.google.com/document/d/12tFL0L13dn50o32PhrkUlKLOW1zf2zUg8s1u5jFoiyg

//
//Продолжение: вебслужбы и генерация html
//

Источники: https://habr.com/ru/company/skillbox/blog/446454/
           https://dev-gang.ru/article/go-web-server/
           https://dou.ua/lenta/articles/go-is-easy/

План:
1. Простой hello-сервер на Go
2. 
